{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/home/aredex/Documentos/HENRY/henry-app/Paper/src/screens/Clases/Clases.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  query Modulos($id: Int) {\\n      cohortes(id: $id){\\n        modules{\\n          id\\n          name\\n          description\\n          contents{\\n            id\\n            topicName\\n            durationTime\\n            readme\\n          }\\n        }\\n      }\\n  }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Card, List } from \"react-native-paper\";\nimport { gql } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/client\";\nimport Loading from \"../../components/Loading/Loading\";\nvar styles = StyleSheet.create({\n  title: {\n    textTransform: \"capitalize\"\n  }\n});\nexport default function Clases(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var getModulos = gql(_templateObject());\n\n  var _useQuery = useQuery(getModulos, {\n    variables: {\n      id: route.params.id\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  return loading ? React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }\n  }) : React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 6\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 20,\n      alignItems: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 6\n    }\n  }, data.cohortes[0].modules.length != 0 ? data.cohortes[0].modules.map(function (modulo) {\n    return React.createElement(Card, {\n      key: modulo.id,\n      style: {\n        width: \"100%\",\n        marginBottom: 15\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, React.createElement(List.Section, {\n      key: modulo.id,\n      style: {\n        width: \"100%\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, React.createElement(List.Accordion, {\n      style: {\n        width: \"100%\"\n      },\n      title: modulo.name,\n      left: function left(props) {\n        return React.createElement(List.Icon, _extends({}, props, {\n          icon: \"folder\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 32\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, modulo.contents.length != 0 ? modulo.contents.map(function (clase) {\n      return React.createElement(List.Item, {\n        key: clase.id,\n        onPress: function onPress() {\n          return alert(clase.topicName);\n        },\n        title: clase.topicName,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      });\n    }) : React.createElement(List.Item, {\n      onPress: function onPress() {\n        return alert(\"Sin Clases\");\n      },\n      title: \"Sin Clases\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }))));\n  }) : React.createElement(Card, {\n    onPress: function onPress() {\n      return alert(\"SIN ELEMENTOS\");\n    },\n    style: {\n      width: \"100%\",\n      marginBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 10\n    }\n  }, React.createElement(Card.Title, {\n    style: styles.title,\n    title: \"SIN ELEMENTOS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/aredex/Documentos/HENRY/henry-app/Paper/src/screens/Clases/Clases.js"],"names":["React","Card","List","gql","useQuery","Loading","styles","StyleSheet","create","title","textTransform","Clases","route","getModulos","variables","id","params","loading","error","data","refetch","flex","width","padding","alignItems","cohortes","modules","length","map","modulo","marginBottom","name","props","contents","clase","alert","topicName"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { View, StyleSheet,ScrollView } from \"react-native\";\nimport { Card, List} from \"react-native-paper\";\nimport { gql } from \"@apollo/client\";\nimport { useQuery } from \"@apollo/client\";\nimport Loading from \"../../components/Loading/Loading\"\n\nconst styles = StyleSheet.create({\n  title: {\n    textTransform: \"capitalize\",\n  }})\n\nexport default function Clases({route}) {\n  const getModulos = gql`\n  query Modulos($id: Int) {\n      cohortes(id: $id){\n        modules{\n          id\n          name\n          description\n          contents{\n            id\n            topicName\n            durationTime\n            readme\n          }\n        }\n      }\n  }\n  `;\n  const { loading, error, data, refetch } = useQuery(getModulos, {\n    variables: { id: route.params.id },\n}) \n\n  return loading? <Loading/>:\n  <View\n      style={{\n        flex: 1,\n      }}\n    >\n     <ScrollView style={{width:\"100%\" }}>\n     <View\n      style={{\n        flex: 1,\n        padding: 20,\n        alignItems: \"center\",\n      }}\n    >\n      {data.cohortes[0].modules.length !=0 ? data.cohortes[0].modules.map((modulo)=>(\n        <Card key={modulo.id} style={{width:\"100%\", marginBottom:15}}>\n          <List.Section key={modulo.id} style={{width:\"100%\"}} >\n              <List.Accordion\n                style={{width:\"100%\"}}\n                title={modulo.name}\n                left={props => <List.Icon {...props} icon=\"folder\" />}>\n                  {modulo.contents.length!=0?\n                   modulo.contents.map((clase)=>(\n                    <List.Item key={clase.id} onPress={()=> alert(clase.topicName)} title={clase.topicName} />\n                  )):\n                  <List.Item onPress={()=> alert(\"Sin Clases\")} title=\"Sin Clases\" />\n                  }\n               </List.Accordion>\n            </List.Section>\n        </Card>\n         )):\n         <Card onPress={()=>alert(\"SIN ELEMENTOS\")} style={{ width: \"100%\",marginBottom:15 }}>\n            <Card.Title\n              style={styles.title}\n              title={\"SIN ELEMENTOS\"}\n            />\n            </Card>\n         }\n      </View>\n    </ScrollView >\n  </View>\n}\n"]},"metadata":{},"sourceType":"module"}