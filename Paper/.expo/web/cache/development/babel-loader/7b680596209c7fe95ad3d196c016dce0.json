{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/home/aredex/Documentos/HENRY/henry-app/Paper/src/screens/Participantes/Participantes.js\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useQuery } from \"@apollo/client\";\nimport { Avatar, Card } from \"react-native-paper\";\nimport ModalAlumns from \"../../components/ModalAlumns/ModalAlumns\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { GET_USERS_GROUP } from \"../../apollo/querys/groups\";\nexport default function Participantes(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  var id = route.params.id;\n  var type = route.params.screen;\n\n  var _useQuery = useQuery(GET_USERS_GROUP, {\n    variables: {\n      \"where\": _defineProperty({}, type, {\n        \"id\": id\n      })\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      modalChange = _React$useState2[0],\n      setModalChange = _React$useState2[1];\n\n  return loading ? React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }) : React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      padding: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, data.users.length != 0 ? data.users.map(function (e) {\n    return React.createElement(Card, {\n      onPress: function onPress() {\n        return setModalChange({\n          givenName: e.givenName,\n          familyName: e.familyName,\n          nickName: e.nickName,\n          url: e.photoUrl\n        });\n      },\n      key: e.id + e.givenName + type + id,\n      style: {\n        width: \"100%\",\n        marginBottom: 10\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, React.createElement(Card.Title, {\n      title: e.givenName + \" \" + e.familyName,\n      subtitle: e.nickName,\n      left: function left(props) {\n        if (e.photoUrl) return React.createElement(Avatar.Image, _extends({}, props, {\n          source: {\n            uri: e.photoUrl\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 50\n          }\n        }));\n        return React.createElement(Avatar.Text, _extends({}, props, {\n          label: e.givenName[0] + e.familyName[0],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 36\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }));\n  }) : React.createElement(Card, {\n    onPress: function onPress() {\n      return alert(\"SIN ELEMENTOS\");\n    },\n    style: {\n      width: \"100%\",\n      marginBottom: 15\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, React.createElement(Card.Title, {\n    title: \"SIN ELEMENTOS\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })), React.createElement(ModalAlumns, {\n    modalChange: modalChange,\n    setModalChange: setModalChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/aredex/Documentos/HENRY/henry-app/Paper/src/screens/Participantes/Participantes.js"],"names":["React","useQuery","Avatar","Card","ModalAlumns","Loading","GET_USERS_GROUP","Participantes","route","id","params","type","screen","variables","loading","error","data","refetch","useState","modalChange","setModalChange","flex","width","alignItems","padding","users","length","map","e","givenName","familyName","nickName","url","photoUrl","marginBottom","props","uri","alert"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, ScrollView } from 'react-native';\nimport { useQuery } from \"@apollo/client\";\nimport { Avatar,Card } from \"react-native-paper\";\nimport ModalAlumns from \"../../components/ModalAlumns/ModalAlumns\"\nimport Loading from \"../../components/Loading/Loading\"\nimport {GET_USERS_GROUP} from \"../../apollo/querys/groups\"\n\nexport default function Participantes({route}) {\n    \n    let id = route.params.id\n    let type= route.params.screen\n    \n    const { loading, error, data, refetch,  } = useQuery(GET_USERS_GROUP, {\n        variables: {\n            \"where\": {\n              [type]: {\n                \"id\": id\n              }\n            }\n          },\n    })\n\n    let [modalChange, setModalChange] = React.useState(false)\n\n    return loading? \n    <Loading/>\n    :\n    <View style={{flex:1}}>\n      <ScrollView style={{width:\"100%\" }}>\n        <View style={{ flex: 1, alignItems: 'center', padding:20 }}>\n            { data.users.length!=0?data.users.map((e) => (\n                <Card onPress={() => (setModalChange({\n                    givenName: e.givenName,\n                    familyName: e.familyName,\n                    nickName: e.nickName,\n                    url: e.photoUrl\n                }))\n                } key={e.id+e.givenName+type+id} style={{ width: \"100%\", marginBottom: 10 }}>\n                    <Card.Title\n                        title={e.givenName + \" \" + e.familyName}\n                        subtitle={e.nickName}\n                        left={(props) =>{\n                            if(e.photoUrl)return <Avatar.Image {...props} source={{ uri: e.photoUrl }}/>\n                            return <Avatar.Text {...props} label={e.givenName[0]+e.familyName[0]}/>\n                        }}\n                    />\n                </Card>\n                \n            ))\n            : \n                <Card onPress={()=>alert(\"SIN ELEMENTOS\")} style={{ width: \"100%\",marginBottom:15 }}>\n                <Card.Title\n                  title={\"SIN ELEMENTOS\"}\n                />\n                </Card>\n            }\n            <ModalAlumns modalChange={modalChange} setModalChange={setModalChange} />\n        </View>\n      </ScrollView >\n    </View>\n}"]},"metadata":{},"sourceType":"module"}