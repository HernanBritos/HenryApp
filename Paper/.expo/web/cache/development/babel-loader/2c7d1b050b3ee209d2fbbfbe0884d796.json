{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nvar _jsxFileName = \"/home/aredex/Documentos/HENRY/henry-app/Paper/src/routes/DrawerRoutes/DrawerRoutes.js\";\nimport React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport CohorteRoutes from \"../CohorteRoutes/CohorteRoutes\";\nimport PmRoutes from \"../PmRoutes/PmRoutes\";\nimport GruposRoutes from \"../GruposRoutes/GruposRoutes\";\nimport PerfilRoutes from \"../PerfilRoutes/PerfilRoutes\";\nimport CalendarioRoutes from \"../CalendarioRoutes/CalendarioRoutes\";\nimport DrawerLayout from \"../../components/drawerLayout/DrawerLayout\";\nimport { useQuery } from \"@apollo/client\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { GET_COHORTE_USER } from \"../../apollo/querys/cohorte\";\nimport { useSelector } from \"react-redux\";\nvar Drawer = createDrawerNavigator();\nexport default function DrawerRoutes(props) {\n  var _this = this;\n\n  var handleTheme = props.handleTheme;\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth;\n  }),\n      user = _useSelector.user;\n\n  var _useQuery = useQuery(GET_COHORTE_USER, {\n    variables: {\n      \"where\": {\n        \"id\": user.id\n      }\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      refetch = _useQuery.refetch;\n\n  return loading ? React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }) : React.createElement(Drawer.Navigator, {\n    drawerContent: function drawerContent(props) {\n      return React.createElement(DrawerLayout, _extends({}, props, {\n        cohortes: data.users[0].cohortes,\n        handleTheme: handleTheme,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }\n      }));\n    },\n    initialRouteName: \"CohorteTab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, data && data.users[0].cohortes.map(function (e) {\n    return React.createElement(Drawer.Screen, {\n      initialParams: {\n        id: e.id\n      },\n      key: e.id,\n      name: e.name,\n      component: CohorteRoutes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    });\n  }), React.createElement(Drawer.Screen, {\n    name: \"PmRoutes\",\n    component: PmRoutes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"CalendarioRoutes\",\n    component: CalendarioRoutes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"PerfilRoutes\",\n    component: PerfilRoutes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), [{\n    id: 1,\n    title: \"Grupo1\"\n  }, {\n    id: 2,\n    title: \"Grupo2\"\n  }].map(function (e) {\n    return React.createElement(Drawer.Screen, {\n      key: e.id,\n      name: e.title,\n      component: GruposRoutes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["/home/aredex/Documentos/HENRY/henry-app/Paper/src/routes/DrawerRoutes/DrawerRoutes.js"],"names":["React","createDrawerNavigator","CohorteRoutes","PmRoutes","GruposRoutes","PerfilRoutes","CalendarioRoutes","DrawerLayout","useQuery","Loading","GET_COHORTE_USER","useSelector","Drawer","DrawerRoutes","props","handleTheme","state","auth","user","variables","id","loading","error","data","refetch","users","cohortes","map","e","name","title"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport CohorteRoutes from \"../CohorteRoutes/CohorteRoutes\";\nimport PmRoutes from \"../PmRoutes/PmRoutes\";\nimport GruposRoutes from \"../GruposRoutes/GruposRoutes\";\nimport PerfilRoutes from \"../PerfilRoutes/PerfilRoutes\";\nimport CalendarioRoutes from \"../CalendarioRoutes/CalendarioRoutes\";\nimport DrawerLayout from \"../../components/drawerLayout/DrawerLayout\";\nimport { useQuery } from \"@apollo/client\";\nimport Loading from \"../../components/Loading/Loading\"\nimport {GET_COHORTE_USER} from \"../../apollo/querys/cohorte\"\nimport {  useSelector } from \"react-redux\";\n\nconst Drawer = createDrawerNavigator();\n\nexport default function DrawerRoutes(props) {\n  const handleTheme = props.handleTheme;\n  const { user } = useSelector((state) => state.auth); \n\n  const { loading, error, data, refetch } = useQuery(GET_COHORTE_USER,{\n    variables: {\n      \"where\": {\n        \"id\":user.id\n      }\n    },\n  })\n\n  return loading?\n  <Loading/>\n  :\n    <Drawer.Navigator\n      drawerContent={(props) => (\n        <DrawerLayout {...props} cohortes={data.users[0].cohortes} handleTheme={handleTheme} />\n      )}\n      initialRouteName=\"CohorteTab\"\n    >\n      {data&&data.users[0].cohortes.map((e)=>(\n          <Drawer.Screen initialParams={{id:e.id}} key={e.id}name={e.name} component={CohorteRoutes} />\n                ))}\n      <Drawer.Screen name=\"PmRoutes\" component={PmRoutes} />\n      <Drawer.Screen name=\"CalendarioRoutes\" component={CalendarioRoutes} />\n      <Drawer.Screen name=\"PerfilRoutes\" component={PerfilRoutes} />\n      {[{id:1, title:\"Grupo1\"},{id:2, title:\"Grupo2\"}].map((e)=>(\n          <Drawer.Screen key={e.id} name={e.title} component={GruposRoutes} />\n                ))}\n    </Drawer.Navigator>\n  ;\n}\n\n"]},"metadata":{},"sourceType":"module"}